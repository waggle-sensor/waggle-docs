"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5763],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(o),m=a,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||r;return o?n.createElement(h,s(s({ref:t},c),{},{components:o})):n.createElement(h,s({ref:t},c))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,s=new Array(r);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var u=2;u<r;u++)s[u]=o[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},7236:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var n=o(7462),a=(o(7294),o(3905));const r={sidebar_position:2},s="Submit your job",l={unversionedId:"tutorials/schedule-jobs",id:"tutorials/schedule-jobs",title:"Submit your job",description:"Are you ready to deploy your plugins to measure the world? We will use edge scheduler to submit a job to demonstrate how you can deploy plugins to field-deployed Waggle nodes.",source:"@site/docs/tutorials/schedule-jobs.md",sourceDirName:"tutorials",slug:"/tutorials/schedule-jobs",permalink:"/docs/tutorials/schedule-jobs",draft:!1,editUrl:"https://github.com/waggle-sensor/waggle-docs/edit/main/docs/tutorials/schedule-jobs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Part 4: Publishing to ECR",permalink:"/docs/tutorials/edge-apps/publishing-to-ecr"},next:{title:"Access and use data",permalink:"/docs/tutorials/accessing-data"}},i={},u=[{value:"Create a job",id:"create-a-job",level:2},{value:"Upload your job to the scheduler",id:"upload-your-job-to-the-scheduler",level:2},{value:"Submit the job",id:"submit-the-job",level:2},{value:"Check status of job",id:"check-status-of-job",level:2},{value:"Access to data",id:"access-to-data",level:2},{value:"More tutorials using <em>sesctl</em>",id:"more-tutorials-using-sesctl",level:2}],c={toc:u};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"submit-your-job"},"Submit your job"),(0,a.kt)("p",null,"Are you ready to deploy your plugins to measure the world? We will use ",(0,a.kt)("a",{parentName:"p",href:"/docs/about/architecture#edge-scheduler-es"},"edge scheduler")," to submit a job to demonstrate how you can deploy plugins to field-deployed Waggle nodes. "),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you have not created your account, please go to ",(0,a.kt)("a",{parentName:"p",href:"https://access.sagecontinuum.org"},"access.sagecontinuum.org")," and log in to create a new account with your email. Once logged in, you will be able to create and edit your jobs, but will need a permission to submit jobs to the scheduler. Please ",(0,a.kt)("a",{parentName:"p",href:"/docs/contact-us"},"contact-us")," to request the job submission permission.")),(0,a.kt)("p",null,"Jobs are an instance of a science goal. They detail what needs to be accomplished on Waggle nodes. A science goal may have multiple jobs to fill the missing data to answer scientific questions of the goal. A job describes,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/about/architecture#what-is-a-plugin"},"plugins")," that are registered and built in ",(0,a.kt)("a",{parentName:"li",href:"/docs/about/architecture#edge-code-repository-ecr"},"edge code repository")," with specification including any plugin arguments,"),(0,a.kt)("li",{parentName:"ul"},"a list of Waggle nodes on which the plugins will be scheduled and run,"),(0,a.kt)("li",{parentName:"ul"},"science rules describing when the plugins should be scheduled,"),(0,a.kt)("li",{parentName:"ul"},"conditions to determine when the job completes")),(0,a.kt)("p",null,"Creating and submitting jobs are an important step for successful science mission using Waggle nodes."),(0,a.kt)("h2",{id:"create-a-job"},"Create a job"),(0,a.kt)("p",null,"We create a job file in YAML format (JSON format is also supported. Please check out ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/edge-scheduler/tree/main/docs/sesctl"},"details of job attributes"),".)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF > myjob.yaml\n---\nname: myjob\nplugins:\n- name: image-sampler\n  pluginSpec:\n    image: registry.sagecontinuum.org/theone/imagesampler:0.3.0\n    args:\n    - -stream\n    - bottom\nnodes:\n  W030:\nscienceRules:\n- \"image-sampler: cronjob('image-sampler', '* * * * *')\"\nsuccesscriteria:\n- WallClock(1d)\nEOF\n")),(0,a.kt)("p",null,"In this example, we want to run a plugin named ",(0,a.kt)("inlineCode",{parentName:"p"},"image-sampler")," to collect an image from the camera named ",(0,a.kt)("inlineCode",{parentName:"p"},"bottom")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"W030")," node. As a result of the job execution, we will get images from the node's camera. The job also specifies that the plugin needs to be scheduled every minute (i.e., ",(0,a.kt)("inlineCode",{parentName:"p"},"* * * * *")," in ",(0,a.kt)("a",{parentName:"p",href:"https://crontab.guru/"},"crontab expression"),"). The job completes 24 hours after the job started to run on the node."),(0,a.kt)("h2",{id:"upload-your-job-to-the-scheduler"},"Upload your job to the scheduler"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sesctl")," is a command-line tool to manage jobs in the scheduler. You can download the latest version from our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/edge-scheduler/releases"},"Github repository"),". Please make sure you download the tool supported for your machine. For example, on your desktop or laptop you would download amd64 version of the tool."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Users will need a token provided from ",(0,a.kt)("a",{parentName:"p",href:"https://access.sagecontinuum.org"},"the access page"),". Click ",(0,a.kt)("inlineCode",{parentName:"p"},"View token")," to receive your token. Then, replace the ",(0,a.kt)("inlineCode",{parentName:"p"},"<<user token>>")," below with the received token.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export SES_HOST=https://es.sagecontinuum.org\nexport SES_USER_TOKEN=<<user token>>\nsesctl ping\n{\n "id": "Cloud Scheduler (cloudscheduler-sage)",\n "version": "0.16.7"\n}\n')),(0,a.kt)("p",null,"To create a job using the job file,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sesctl create --file-path myjob.yaml\n{\n "job_id": "56",\n "job_name": "myjob",\n "status": "Created"\n}\n')),(0,a.kt)("p",null,"To verify that we have uploaded the job,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sesctl stat\nJOB_ID  NAME                         USER       STATUS     AGE     \n====================================================================\n...\n56      myjob                        theone     Created    - \n...\n")),(0,a.kt)("h2",{id:"submit-the-job"},"Submit the job"),(0,a.kt)("p",null,"To submit the job,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sesctl submit --job-id 56\n{\n "job_id": "56",\n "status": "Submitted"\n}\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You may receive a list of errors from the scheduler if the job cannot be validated. For instance, your account may not have scheduling permission on the node ",(0,a.kt)("inlineCode",{parentName:"p"},"W030"),". Please consult with us for any error, especially errors related to scheduling permission on nodes in the job.")),(0,a.kt)("h2",{id:"check-status-of-job"},"Check status of job"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sesctl stat --job 56\n===== JOB STATUS =====\nJob ID: 56\nJob Name: myjob\nJob Owner: \nJob Status: Submitted\nJob Starttime: 2022-10-10 02:21:37.373437 +0000 UTC\n\n===== SCHEDULING DETAILS =====\nScience Goal ID: 45afe963-5b8b-4e15-654c-54e2946f2ddb\nTotal number of nodes 1\n")),(0,a.kt)("p",null,"The job status can be also shown in ",(0,a.kt)("a",{parentName:"p",href:"https://portal.sagecontinuum.org/job-status"},"job status page"),"."),(0,a.kt)("h2",{id:"access-to-data"},(0,a.kt)("a",{parentName:"h2",href:"/docs/tutorials/access-waggle-sensors"},"Access to data")),(0,a.kt)("p",null,"A few minutes later, the ",(0,a.kt)("inlineCode",{parentName:"p"},"W030")," Waggle node would start collecting images by scheduling the plugin on the node. Collected images are transferred to ",(0,a.kt)("a",{parentName:"p",href:"/docs/about/architecture#beehive"},"Beehive")," for users to download."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},'curl -H \'Content-Type: application/json\' https://data.sagecontinuum.org/api/v1/query -d \'\n{\n    "start": "-5m",\n    "filter": {\n        "task": "image-sampler",\n        "vsn": "W030",\n        "name": "upload",\n    }\n}\n\'\n')),(0,a.kt)("h2",{id:"more-tutorials-using-sesctl"},"More tutorials using ",(0,a.kt)("em",{parentName:"h2"},"sesctl")),(0,a.kt)("p",null,"More tutorials can be found in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waggle-sensor/edge-scheduler/tree/main/docs/sesctl"},"Github repository"),"."))}p.isMDXComponent=!0}}]);